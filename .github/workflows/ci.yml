name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ "ubuntu-latest", "macos-latest", "windows-latest" ]
        python-version: [ "3.8", "3.9", "3.10", "3.11" ]

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: recipe_dbb
          POSTGRES_PASSWORD: prototype
          POSTGRES_USER: SEPP
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      # Step 1: Check out the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Python with caching
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      # Step 3: Install PostgreSQL client
      - name: Install PostgreSQL client
        run: |
          if [ "${{ runner.os }}" == "Linux" ]; then
            sudo apt-get update
            sudo apt-get install -y postgresql-client
          elif [ "${{ runner.os }}" == "macOS" ]; then
            brew install postgresql
          elif [ "${{ runner.os }}" == "Windows" ]; then
            choco install postgresql-client
          fi

      # Step 4: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          python -m pip install pytest pytest-cov

      # Step 5: Initialize Database
      - name: Initialize Database
        env:
          PGPASSWORD: prototype
        run: |
          # Assumes you have an init.sql file in the repository
          psql -h localhost -U SEPP -d recipe_dbb -f init.sql

      # Step 6: Run pytest with coverage and generate log
      - name: Run pytest with coverage
        env:
          DATABASE_URL: postgresql://SEPP:prototype@db:5432/recipe_dbb
        run: |
          pytest -v --cov=. --cov-report=xml > pytest_log.txt 2>&1

      # Step 7: Upload artifacts
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: test-artifacts-${{ matrix.os }}-python-${{ matrix.python-version }}
          path: |
            pytest_log.txt
            coverage.xml
            requirements.txt
            *_pg_config.txt
          retention-days: 7
